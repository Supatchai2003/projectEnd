// ===== Base URL ‡∏Ç‡∏≠‡∏á backend =====
const API_BASE = "http://localhost:3000";

// ===== Popup Helper =====
function openPopup(id, { message, type, onClose, autoCloseMs = 2000 } = {}) {
  const popup = document.getElementById(id);
  if (!popup) return;

  const content = popup.querySelector(".popup-content");
  const msgNode = popup.querySelector(".popup-message");
  const okBtn = popup.querySelector(".popup-ok");

  if (content) {
    content.classList.remove("popup-success", "popup-error");
    if (type === "success") content.classList.add("popup-success");
    else if (type === "error") content.classList.add("popup-error");
  }
  if (message && msgNode) msgNode.textContent = message;

  popup.style.display = "flex";

  if (okBtn) {
    const newOk = okBtn.cloneNode(true);
    okBtn.replaceWith(newOk);
    newOk.addEventListener("click", () => closePopup(id, onClose));
  }
  if (autoCloseMs && autoCloseMs > 0) {
    setTimeout(() => closePopup(id, onClose), autoCloseMs);
  }
}

function closePopup(id, onClose) {
  const popup = document.getElementById(id);
  if (!popup) return;
  popup.style.display = "none";
  if (typeof onClose === "function") onClose();
}

// ===== UI/State =====
let selectedDeviceId = null;

function toggleMenu() {
  const menu = document.getElementById("menu");
  menu.style.display = menu.style.display === "flex" ? "none" : "flex";
}

// ===== Popup ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå =====
function showPopup() {
  document.getElementById("popup").style.display = "flex";
}
function hidePopup() {
  document.getElementById("popup").style.display = "none";
}

async function addDevice() {
  const piid = document.getElementById("piid").value.trim();
  if (!piid) {
    openPopup("popup-error", { message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å ID ‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå", type: "error" });
    return;
  }

  try {
    const res = await fetch(`${API_BASE}/devices/add`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ piid })
    });
    const json = await res.json();

    if (!res.ok || !json.success) {
      openPopup("popup-error", { message: json.message || "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", type: "error" });
      return;
    }

    openPopup("popup-success", {
      message: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
      type: "success",
      onClose: () => { hidePopup(); loadDevices(); }
    });
  } catch (e) {
    console.error(e);
    openPopup("popup-error", { message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå", type: "error" });
  }
}

// ===== Popup ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç =====
function showEditPopup(data) {
  selectedDeviceId = data.docId;            // ‚úÖ ‡πÉ‡∏ä‡πâ docId ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏¥‡∏á PUT/DELETE
  document.getElementById("v-ip").innerText = data.ip || "-";
  document.getElementById("v-serial").value = data.id || "";   // ‚úÖ ‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏Å‡πâ "‡∏ü‡∏¥‡∏•‡∏î‡πå id"
  document.getElementById("v-status").innerText = data.status || "‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå";
  document.getElementById("v-date").innerText = data.createdAt || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
  document.getElementById("edit-popup").style.display = "flex";
}

function hideEditPopup() {
  document.getElementById("edit-popup").style.display = "none";
}

async function confirmEdit() {
  if (!selectedDeviceId) {
    openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï", type: "error" });
    return;
  }
  const newIdValue = document.getElementById("v-serial").value.trim();

  try {
    const res = await fetch(`${API_BASE}/devices/${encodeURIComponent(selectedDeviceId)}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: newIdValue || null })  // ‚úÖ ‡πÅ‡∏Å‡πâ‡∏ü‡∏¥‡∏•‡∏î‡πå id
    });

    const json = await res.json();
    if (!res.ok || !json.success) {
      openPopup("popup-error", { message: json.message || "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", type: "error" });
      return;
    }

    openPopup("popup-success", {
      message: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
      type: "success",
      onClose: () => { hideEditPopup(); loadDevices(); }
    });
  } catch (e) {
    console.error(e);
    openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ", type: "error" });
  }
}

// ===== ‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå =====
async function deleteDevice() {
  if (!selectedDeviceId) {
    openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö", type: "error" });
    return;
  }

  openPopup("popup-confirm", {
    message: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ?",
    type: "error",
    autoCloseMs: null,
    onClose: async () => {
      try {
        const res = await fetch(`${API_BASE}/devices/${encodeURIComponent(selectedDeviceId)}`, {
          method: "DELETE"
        });
        const json = await res.json();

        if (!res.ok || !json.success) {
          openPopup("popup-error", { message: json.message || "‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", type: "error" });
          return;
        }

        openPopup("popup-success", {
          message: "‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
          type: "success",
          onClose: () => { hideEditPopup(); loadDevices(); }
        });
      } catch (e) {
        console.error(e);
        openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ", type: "error" });
      }
    }
  });
}

// ===== helper: ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ query string =====
function getQueryParam(name) {
  const url = new URL(window.location.href);
  return url.searchParams.get(name);
}

// ===== ‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå =====
async function loadDevices() {
  const container = document.getElementById("device-list");
  container.innerHTML = "";

  const wantId = getQueryParam("id"); // ‡∏ï‡∏£‡∏ß‡∏à id ‡∏à‡∏≤‡∏Å URL

  try {
    let json;
    if (wantId) {
      // ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå id ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
      const res = await fetch(`${API_BASE}/devices/${encodeURIComponent(wantId)}`);
      json = await res.json();

      if (!res.ok || !json.success || !json.data) {
        openPopup("popup-error", { message: json.message || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ï‡∏≤‡∏° id", type: "error" });
        return;
      }
      json = { success: true, data: [json.data] };
    } else {
      // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      const res = await fetch(`${API_BASE}/devices`);
      json = await res.json();
      if (!res.ok || !json.success) {
        openPopup("popup-error", { message: json.message || "‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", type: "error" });
        return;
      }
    }

    let index = 1;
    (json.data || []).forEach((item) => {
      const used = Number(item.used) || 0;
      const total = Number(item.total) || 1;
      const usedPercent = Math.min(100, Math.round((used / total) * 100));

      const div = document.createElement("div");
      div.className = "device-box";
      const displayId = item.id ?? item.docId; // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏¥‡∏•‡∏î‡πå id ‡∏Å‡πà‡∏≠‡∏ô ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≠‡∏¢ fallback ‡πÄ‡∏õ‡πá‡∏ô docId
      div.innerHTML = `
          <h3>${index++}. Raspberry Pi ID : ${displayId}
            <button class="edit-btn"
                onclick='showEditPopup(${JSON.stringify({ ...item })})'>‚úèÔ∏è</button>
          </h3>
        <div class="bar-container">
          <div class="bar-used" style="width: ${usedPercent}%"></div>
        </div>
        <div class="bar-labels">
          <span>‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span><span style="color:red;">üî¥ ‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß</span>
        </div>
        <div class="status">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ : ${item.status || '‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå'}</div>
      `;
      container.appendChild(div);
    });
  } catch (e) {
    console.error(e);
    openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ", type: "error" });
  }
}

// ===== ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡πÜ =====
function goHome() {
  const role = localStorage.getItem("role");
  if (role === "superadmin") {
    window.location.href = "../../manager/homepage/M_homepage.html";
  } else {
    window.location.href = "../../device/list_device/device_list.html";
  }
}

function logout() {
  localStorage.clear();
  openPopup("popup-success", {
    message: "‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
    type: "success",
    onClose: () => window.location.href = "../../index.html"
  });
}

// ===== Popup ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ =====
function showHistoryPopup() { document.getElementById("history-popup").style.display = "flex"; }
function hideHistoryPopup() { document.getElementById("history-popup").style.display = "none"; }
function goToHistory(type) {
  if (type === 'summary') window.location.href = "../../device/history/history_summary.html";
  if (type === 'daily') window.location.href = "../../device/history/history_time.html";
}

// ===== ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à =====
document.addEventListener("DOMContentLoaded", () => {
  loadDevices();
});
