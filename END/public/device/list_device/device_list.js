// ===== Base URL ‡∏Ç‡∏≠‡∏á backend =====
const API_BASE = "http://localhost:3000";

// ===== Popup Helper (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡πÜ) =====
function openPopup(id, { message, type, onClose, autoCloseMs = 2000 } = {}) {
  const popup = document.getElementById(id);
  if (!popup) return;

  const content = popup.querySelector(".popup-content");
  const msgNode = popup.querySelector(".popup-message");
  const okBtn = popup.querySelector(".popup-ok");

  if (content) {
    content.classList.remove("popup-success", "popup-error");
    if (type === "success") content.classList.add("popup-success");
    else if (type === "error") content.classList.add("popup-error");
  }
  if (message && msgNode) msgNode.textContent = message;

  popup.style.display = "flex";

  if (okBtn) {
    const newOk = okBtn.cloneNode(true);
    okBtn.replaceWith(newOk);
    newOk.addEventListener("click", () => closePopup(id, onClose));
  }
  if (autoCloseMs && autoCloseMs > 0) {
    setTimeout(() => closePopup(id, onClose), autoCloseMs);
  }
}
function closePopup(id, onClose) {
  const popup = document.getElementById(id);
  if (!popup) return;
  popup.style.display = "none";
  if (typeof onClose === "function") onClose();
}

// ===== UI/State =====
let selectedDeviceId = null;

function toggleMenu() {
  const menu = document.getElementById("menu");
  menu.style.display = menu.style.display === "flex" ? "none" : "flex";
}

// ===== ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå =====
function showPopup() {
  document.getElementById("popup").style.display = "flex";
}
function hidePopup() {
  document.getElementById("popup").style.display = "none";
}
async function addDevice() {
  const piid = document.getElementById("piid").value.trim();
  if (!piid) {
    openPopup("popup-error", { message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Serial ID", type: "error" });
    return;
  }

  try {
    const res = await fetch(`${API_BASE}/devices/add`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ piid })
    });
    const json = await res.json();
    if (!res.ok || !json.success) {
      openPopup("popup-error", { message: json.message || "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", type: "error" });
      return;
    }
    openPopup("popup-success", {
      message: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
      type: "success",
      onClose: () => { hidePopup(); loadDevices(); }
    });
  } catch (e) {
    console.error(e);
    openPopup("popup-error", { message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå", type: "error" });
  }
}

// ===== ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå =====
function showEditPopup(data) {
  selectedDeviceId = data.docId || data.id || data.serial;
  document.getElementById("v-ip").innerText = data.ip || "-";
  document.getElementById("v-serial").value = data.serial || data.id || "";
  document.getElementById("v-status").innerText = data.status || "‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå";
  document.getElementById("v-date").innerText = data.createdAt || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
  document.getElementById("edit-popup").style.display = "flex";
}
function hideEditPopup() {
  document.getElementById("edit-popup").style.display = "none";
}
async function confirmEdit() {
  if (!selectedDeviceId) {
    openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï", type: "error" });
    return;
  }
  const newSerial = document.getElementById("v-serial").value.trim();
  try {
    const res = await fetch(`${API_BASE}/devices/${encodeURIComponent(selectedDeviceId)}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ serial: newSerial || null })
    });
    const json = await res.json();
    if (!res.ok || !json.success) {
      openPopup("popup-error", { message: json.message || "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", type: "error" });
      return;
    }
    openPopup("popup-success", {
      message: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
      type: "success",
      onClose: () => { hideEditPopup(); loadDevices(); }
    });
  } catch (e) {
    console.error(e);
    openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ", type: "error" });
  }
}

// ===== ‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå =====
async function deleteDevice() {
  if (!selectedDeviceId) {
    openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö", type: "error" });
    return;
  }

  // ‡πÉ‡∏ä‡πâ popup-confirm: ‡∏Å‡∏î‡∏ï‡∏Å‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏•‡∏ö
  openPopup("popup-confirm", {
    message: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ?",
    type: "error",
    autoCloseMs: null,
    onClose: async () => {
      try {
        const res = await fetch(`${API_BASE}/devices/${encodeURIComponent(selectedDeviceId)}`, {
          method: "DELETE"
        });
        const json = await res.json();
        if (!res.ok || !json.success) {
          openPopup("popup-error", { message: json.message || "‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", type: "error" });
          return;
        }
        openPopup("popup-success", {
          message: "‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
          type: "success",
          onClose: () => { hideEditPopup(); loadDevices(); }
        });
      } catch (e) {
        console.error(e);
        openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ", type: "error" });
      }
    }
  });
}

// ===== ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡πÜ =====
function goHome() {
  const role = localStorage.getItem("role");
  if (role === "superadmin") {
    window.location.href = "../../manager/homepage/M_homepage.html";
  } else {
    window.location.href = "../../device/list_device/device_list.html";
  }
}
function logout() {
  localStorage.clear();
  openPopup("popup-success", {
    message: "‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
    type: "success",
    onClose: () => window.location.href = "../../index.html"
  });
}

// ===== ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå =====
async function loadDevices() {
  const container = document.getElementById("device-list");
  container.innerHTML = "";

  try {
    const res = await fetch(`${API_BASE}/devices`);
    const json = await res.json();
    if (!res.ok || !json.success) {
      openPopup("popup-error", { message: json.message || "‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", type: "error" });
      return;
    }
    let index = 1;
    (json.data || []).forEach((item) => {
      const used = Number(item.used) || 0;
      const total = Number(item.total) || 1;
      const usedPercent = Math.min(100, Math.round((used / total) * 100));
      const displaySerial = item.serial || item.id || item.id; // fallback

      const div = document.createElement("div");
      div.className = "device-box";
      div.innerHTML = `
        <h3>${index++}. Raspberry pi Serial : ${displaySerial}
          <button class="edit-btn"
            onclick='showEditPopup(${JSON.stringify({ ...item, docId: item.id })})'>‚úèÔ∏è</button>
        </h3>
        <div class="bar-container">
          <div class="bar-used" style="width: ${usedPercent}%"></div>
        </div>
        <div class="bar-labels">
          <span>‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span><span style="color:red;">üî¥ ‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß</span>
        </div>
        <div class="status">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ : ${item.status || '‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå'}</div>
      `;
      container.appendChild(div);
    });
  } catch (e) {
    console.error(e);
    openPopup("popup-error", { message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ", type: "error" });
  }
}

// --- ‡πÉ‡∏ä‡πâ‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ ---
function showHistoryPopup(){ document.getElementById("history-popup").style.display = "flex"; }
function hideHistoryPopup(){ document.getElementById("history-popup").style.display = "none"; }
function goToHistory(type){
  if (type === 'summary') window.location.href = "../../device/history/history_summary.html";
  if (type === 'daily')   window.location.href = "../../device/history/history_time.html";
}

// ‚úÖ ‡∏ú‡∏π‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô popup ‡∏´‡∏•‡∏±‡∏á DOM ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener("DOMContentLoaded", () => {
  const btn = document.getElementById("history-btn");
  if (btn) btn.addEventListener("click", showHistoryPopup);

  const closeBtn = document.getElementById("history-close");
  if (closeBtn) closeBtn.addEventListener("click", hideHistoryPopup);

  const sumBtn = document.getElementById("go-history-summary");
  if (sumBtn) sumBtn.addEventListener("click", () => goToHistory("summary"));

  const dailyBtn = document.getElementById("go-history-daily");
  if (dailyBtn) dailyBtn.addEventListener("click", () => goToHistory("daily"));
});


// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
loadDevices();
